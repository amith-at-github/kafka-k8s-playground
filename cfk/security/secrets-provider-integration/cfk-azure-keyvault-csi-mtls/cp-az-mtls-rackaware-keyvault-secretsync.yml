---

apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: confluent
  annotations:
    platform.confluent.io/zookeeper-myid-offset: "10"
spec:
  replicas: 3
  oneReplicaPerNode: true
  image:
    application: confluentinc/cp-zookeeper:7.0.1
    init: confluentinc/confluent-init-container:2.2.0-1
  dataVolumeCapacity: 5Gi
  logVolumeCapacity: 5Gi
  configOverrides:
    jvm:
      - -Xmx3G
      - -Xms3G 
    log4j:
      - log4j.rootLogger=DEBUG, stdout
  authentication:
    type: digest
    jaasConfig:
      secretRef: credential
  mountedVolumes:
    volumes:
    - name: secrets-store01-inline
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: "azure-kvname-user-msi"
    volumeMounts:
    - name: secrets-store01-inline
      mountPath: "/mnt/secrets-store"
      readOnly: true
  podTemplate:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: nodeType
              operator: In
              values:
              - non-kafka 
    # resources:
    #   limits: 
    #     cpu: 1
    #     memory: 6Gi
    #   requests: 
    #     cpu: 1
    #     memory: 6Gi
---

apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
  annotations:
    platform.confluent.io/broker-id-offset: "100"
spec:
  replicas: 3
  oneReplicaPerNode: true
  image:
    application: confluentinc/cp-server:7.0.1
    init: confluentinc/confluent-init-container:2.2.0-1
  dataVolumeCapacity: 5Gi
  # Uncomment for : Rack Assiggment configuration
  # rackAssignment:
  #   nodeLabels:
  #   - topology.kubernetes.io/zone
  configOverrides:
    log4j:
      - log4j.rootLogger=DEBUG, stdout
    jvm:
      - -Dcom.sun.jndi.ldap.object.disableEndpointIdentification=true
      # - -Xmx6G
      # - -Xms6G
    server:
      - authorizer.class.name=kafka.security.authorizer.AclAuthorizer
      # - replica.selector.class=org.apache.kafka.common.replica.RackAwareReplicaSelector
  tls:
    secretRef: tls-kafka
  listeners:
    internal:
      authentication:
        type: mtls
        principalMappingRules:
          - RULE:^CN=([a-zA-Z0-9]*).*$/$1/
      tls:
        enabled: true
        # Will use the certificates in the parent secretRef tls-kafka
    external:
      authentication:
        type: mtls
        principalMappingRules:
          - RULE:^CN=([a-zA-Z0-9]*).*$/$1/
      tls:
        enabled: true
        # Will use the certificates in the parent secretRef tls-kafka
      externalAccess:
        type: staticForHostBasedRouting
        staticForHostBasedRouting:
          domain: confluent-dev.amith.com 
          brokerPrefix: fm 
          port: 443
      tls:
        enabled: true
  authorization:
    type: simple
    superUsers:
    - User:kafka
  dependencies:
    zookeeper:
      endpoint: zookeeper.confluent.svc.cluster.local:2181
      authentication:
        type: digest
        jaasConfig:
          secretRef: credential
  mountedVolumes:
    volumes:
    - name: secrets-store01-inline
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: "azure-kvname-user-msi"
    volumeMounts:
    - name: secrets-store01-inline
      mountPath: "/mnt/secrets-store"
      readOnly: true
  podTemplate:
    serviceAccountName: kafka
    probe:
      readiness:
        initialDelaySeconds: 5
        periodSeconds: 10
        failureThreshold: 5
      liveness:
        initialDelaySeconds: 5
        periodSeconds: 10
        failureThreshold: 5
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: nodeType
              operator: In
              values:
              - kafka
    # resources:
    #   limits: 
    #     cpu: 5
    #     memory: 20Gi
    #   requests: 
    #     cpu: 5
    #     memory: 20Gi    
---


# apiVersion: platform.confluent.io/v1beta1
# kind: SchemaRegistry
# metadata:
#   name: schemaregistry
#   namespace: confluent
# spec:
#   replicas: 1
#   image:
#     application: confluentinc/cp-schema-registry:7.0.1
#     init: confluentinc/confluent-init-container:2.2.0-1
#   configOverrides:
#     server:
#       - kafkastore.client.rack=us-east1
#       - kafkastore.topic=_schemas_demo
#       - schema.registry.group.id=schema-registry-demo
#   tls:
#     secretRef: tls-schemaregistry
#   authentication:
#     type: mtls  
#   dependencies:
#     kafka:
#       bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
#       authentication:
#         type: mtls
#       tls:
#         enabled: true

# ---

# apiVersion: platform.confluent.io/v1beta1
# kind: Connect
# metadata:
#   name: connect
#   namespace: confluent
# spec:
#   replicas: 1
#   image:
#     application: confluentinc/cp-server-connect:7.0.1
#     init: confluentinc/confluent-init-container:2.2.0-1
#   configOverrides:
#     server:
#       - group.id=demo-connect-cluster
#      # - client.id=mrc-connect-cluster-east
#       - config.storage.topic=demo-connect-configs
#       - offset.storage.topic=demo-connect-offsets
#       - status.storage.topic=demo-connect-statuses
#   tls:
#     secretRef: tls-connect
#   authentication:
#     type: mtls  
#   build:
#     type: onDemand
#     onDemand:
#       plugins:
#         locationType: confluentHub
#         confluentHub:
#           - name: kafka-connect-datagen
#             owner: confluentinc
#             version: 0.5.2
#   dependencies:
#     kafka:
#       bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
#       authentication:
#         type: mtls
#       tls:
#         enabled: true
#     schemaRegistry:
#       url: https://schemaregistry.confluent.svc.cluster.local:8081
#       tls:
#         enabled: true 
# ---

# apiVersion: platform.confluent.io/v1beta1
# kind: KsqlDB
# metadata:
#   name: ksqldb
#   namespace: confluent
# spec:
#   replicas: 1
#   image:
#     application: confluentinc/cp-ksqldb-server:7.0.1
#     init: confluentinc/confluent-init-container:2.2.0-1
#   dataVolumeCapacity: 5Gi
#   configOverrides:
#     server:
#       - ksql.service.id=demo-ksqldb_
#   tls:
#     secretRef: tls-ksqldb
#   authentication:
#     type: mtls  
#   dependencies:
#     kafka:
#       bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
#       authentication:
#         type: mtls
#       tls:
#         enabled: true
#     schemaRegistry:
#       url: https://schemaregistry.confluent.svc.cluster.local:8081
#       tls:
#         enabled: true   
# ---

# apiVersion: platform.confluent.io/v1beta1
# kind: ControlCenter
# metadata:
#   name: controlcenter
#   namespace: confluent
# spec:
#   replicas: 1
#   image:
#     application:  confluentinc/cp-enterprise-control-center:7.0.1
#     init: confluentinc/confluent-init-container:2.2.0-1
#   dataVolumeCapacity: 5Gi
#   tls:
#     secretRef: tls-controlcenter
#   configOverrides:
#     log4j:
#       - log4j.rootLogger=DEBUG, stdout
#   dependencies:
#     kafka:
#       bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
#       authentication:
#         type: mtls
#       tls:
#         enabled: true
#     schemaRegistry:
#       url: https://schemaregistry.confluent.svc.cluster.local:8081
#       authentication:
#         type: mtls
#       tls:
#         enabled: true
#         secretRef: tls-schemaregistry
#     ksqldb:
#     - name: ksqldb
#       url: https://ksqldb.confluent.svc.cluster.local:8088
#       authentication:
#         type: mtls
#       tls:
#         enabled: true
#         secretRef: tls-ksqldb
#     connect:
#     - name: connect
#       url: https://connect.confluent.svc.cluster.local:8083
#       authentication:
#         type: mtls
#       tls:
#         enabled: true
#        # ignoreTrustStoreConfig: true
#         secretRef: tls-connect
# ---
