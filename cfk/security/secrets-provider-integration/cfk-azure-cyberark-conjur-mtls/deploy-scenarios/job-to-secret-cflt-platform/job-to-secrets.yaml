#https://docs.cyberark.com/AAM-DAP/Latest/en/Content/Integrations/k8s-ocp/cjr-k8s-secrets-provider-ic-p2f.htm?tocpath=Integrations%7COpenShift%252FKubernetes%7CApp%20owner%253A%20Set%20up%20workloads%20in%20Kubernetes%7CSet%20up%20workloads%20(cert-based%20authn)%7CSecrets%20Provider%20for%20Kubernetes%7CInit%20container%252FSidecar%7C_____2
#This Works without any changes.. important..cert issue hence enabled env variable
# Also note container mode should be set comented , so that this works
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: secrets-provider-app
  name: secrets-provider-app
  namespace: test-app-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: secrets-provider-app
  template:
    metadata:
      labels:
        app: secrets-provider-app
      annotations:
        conjur.org/log-level: debug
        # conjur.org/authn-identity: host/secrets-provider-app
        #conjur.org/container-mode: application
        # conjur.org/secrets-destination: file
        # conjur.org/conjur-secrets-policy-path.secrets-provider-app: secrets/
        # conjur.org/conjur-secrets.secrets-provider-app: |
        #   - username: username
        #   - password: password
        # conjur.org/secret-file-path.secrets-provider-app: "./credentials.yaml"
        # conjur.org/secret-file-format.secrets-provider-app: "yaml"
        conjur.org/secrets-refresh-enabled: "true"
        conjur.org/secrets-refresh-interval: 20s
    spec:
      serviceAccountName: test-app-sa
      containers:
      # - name: secrets-provider-app
      #   image: k8s.gcr.io/e2e-test-images/busybox:1.29-1
      #   command:
      #     - "/bin/sleep"
      #     - "10000"
      #    # image: myorg/test-app
      #   env:
      #     - name: DB_USERNAME
      #       valueFrom:
      #         secretKeyRef:
      #           name: db-credentials
      #           key: username
      #     - name: DB_PASSWORD
      #       valueFrom:
      #         secretKeyRef:
      #           name: db-credentials
      #           key: password
      - name: cyberark-secrets-provider-for-k8s
      #- name: authenticator
        image: 'cyberark/secrets-provider-for-k8s:latest'
        imagePullPolicy: Always
        env:
          - name: CONJUR_AUTHN_LOGIN
            value: "host/secrets-provider-app"
          - name: CONTAINER_MODE
            value: sidecar
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: K8S_SECRETS
            value: db-credentials,tls-zookeeper,tls-kafka,tls-controlcenter,credential,tls-connect,tls-schemaregistry,tls-ksqldb,tls-kafkarestproxy
          - name: SECRETS_DESTINATION
            value: k8s_secrets
          - name: CONJUR_SSL_CERTIFICATE
            valueFrom:
              secretKeyRef:
                name: conjur-oss-conjur-ssl-cert
                key: tls.crt
# added to avoid config map
          - name: CONJUR_AUTHN_URL
            value: "https://conjur-oss.conjur.svc.cluster.local/authn-k8s/dev-cluster"
          - name: CONJUR_ACCOUNT
            value: "myorg"
          - name: CONJUR_APPLIANCE_URL
            value: "https://conjur-oss.conjur.svc.cluster.local"
# added to avoid config map
        # envFrom:
        #   - configMapRef:
        #       name: conjur-connect
        volumeMounts:
        - mountPath: /run/conjur
          name: conjur-access-token
        - mountPath: /etc/conjur/ssl
          name: conjur-certs
        - mountPath: /conjur/podinfo
          name: podinfo
      volumes:
      - emptyDir:
          medium: Memory
        name: conjur-access-token
      - emptyDir:
          medium: Memory
        name: conjur-certs
      - downwardAPI:
          defaultMode: 420
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.annotations
            path: annotations
        name: podinfo